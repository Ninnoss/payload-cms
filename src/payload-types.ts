/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    jobs: Job;
    apply: Apply;
    media: Media;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {};
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name?: string | null;
  roles?: ('admin' | 'user')[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "jobs".
 */
export interface Job {
  id: string;
  title: string;
  requirements: {
    [k: string]: unknown;
  }[];
  requirementsHTML?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  responsibilities: {
    [k: string]: unknown;
  }[];
  responsibilitiesHTML?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  department:
    | 'frontend'
    | 'backend'
    | 'full-stack'
    | 'mobile-native'
    | 'react-native'
    | 'ml'
    | 'data-specialist'
    | 'devops'
    | 'data-engineering'
    | 'security'
    | 'game-development'
    | 'other';
  otherDepartment?: string | null;
  jobType: 'onsite' | 'remote' | 'hybrid';
  location?: string | null;
  employmentType: 'full-time' | 'part-time' | 'contract' | 'internship';
  salary: '1' | '2' | '3' | '4' | '5';
  skills?:
    | {
        skill?: string | null;
        id?: string | null;
      }[]
    | null;
  applicationDeadline: string;
  isActive?: boolean | null;
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "apply".
 */
export interface Apply {
  id: string;
  jobTitle: string;
  firstName: string;
  lastName: string;
  email: string;
  country: string;
  linkedin?: string | null;
  website?: string | null;
  englishLevel: 'beginner' | 'intermediate' | 'advanced';
  startDate: string;
  about: string;
  resume: string | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  md5Hash: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}